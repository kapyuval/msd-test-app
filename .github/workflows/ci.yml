name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Build Job (Builds Docker Image, runs tests)
  build:
    uses: ./.github/workflows/setup-docker.yml
    with:
      docker-image-name: ${{ github.event.repository.name }}
      commit-sha: ${{ github.sha }}

  # PR Validation Job (Runs on PRs)
  pr-validation:
    needs: [build] # To make sure image is built properly as well
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: PR Validation
      # Optionally, ensure 'build' job runs first if needed
        uses: ./.github/actions/pr-validation

  # Versioning Job (Handles versioning strategy for the app)
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Versioning
        id: versioning
      # Optionally, ensure 'build' job runs first if needed
        uses: ./.github/actions/versioning
        
  # PR Comment Job (Optional: to add checks and comments on PR)
  pr-comment:
    runs-on: ubuntu-latest
    needs: pr-validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add PR comment on success
        run: |
          if [[ "${{ needs.pr-validation.result }}" == "success" ]]; then
            echo "PR validation successful!"
          else
            echo "PR validation failed. Please check the logs."
          fi

  # Docker Publish Job (Publish to DockerHub) - Expected to have DockerHub username and password in secrets: DOCKER_USERNAME and DOCKER_PASSWORD
  docker-publish:
    needs: [pr-validation,versioning] # Don't proceed to publish if pr-validation or versioning failed
    if: github.ref == 'refs/heads/main' # Deploy only if it's the main branch
    uses: ./.github/workflows/publish-docker.yml
    secrets: inherit
    with:
      docker-image-fullname: ${{ github.repository }}
      commit-sha: ${{ github.sha }}
      version: ${{ needs.versioning.outputs.version }}

  # Helm app verison/image version changes (Publish to the Helm repo) - Expected to have HELM_REPO_NAME set and a git token secret HELM_REPO_PAT for accessing the other repo
  helm-check:
    needs: [versioning,docker-publish]
    if: github.ref == 'refs/heads/main' # Deploy only if it's the main branch
    uses: ./.github/workflows/helm-check.yml
    secrets: inherit
    
    with:
      tag: ${{ needs.versioning.outputs.version }}
      helm-repo-name: ${{ vars.HELM_REPO_NAME }}
