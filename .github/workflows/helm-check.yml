name: CI - Sync Helm Chart Version (Cross Repo)

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  read_flag_from_artifact:
    runs-on: ubuntu-latest
    steps:
    - name: Get the artifact ID from previous workflow
      id: get_artifact
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        WORKFLOW_RUN_ID=${{ github.event.workflow_run.id }}
        REPO=${{ github.repository }}

        ARTIFACT_ID=$(gh api \
          repos/$REPO/actions/runs/$WORKFLOW_RUN_ID/artifacts \
          --jq '.artifacts[] | select(.name=="flag-artefact") | .id')

        echo "artifact_id=$ARTIFACT_ID" >> $GITHUB_OUTPUT

    - name: Download artifact from previous workflow
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ARTIFACT_ID=${{ steps.get_artifact.outputs.artifact_id }}
        curl \
          -L \
          -H "Authorization: Bearer $GH_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip \
          --output artifact.zip

        unzip artifact.zip -d ./artifact

    - name: Check flag
      id: check_flag
      run: |
        VALUE=$(cat ./artifact/tag_flag.txt | grep tag_pushed | cut -d '=' -f2)
        echo "tag_pushed=$VALUE" >> $GITHUB_OUTPUT
          
  update-helm-chart:
    runs-on: ubuntu-latest
    name: Update version in charts repo
    if: ${{ steps.check_flag.outputs.tag_pushed == 'true' }}
    steps:
    - name: Get App Version from Git Tag
      id: get_version
      run: |
        TAG_NAME=${GITHUB_REF##*/}
        APP_VERSION=${TAG_NAME#v}
        echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT

    - name: Clone Helm Charts Repository
      run: |
        # Clone helm repo using access token stored in secret
        git clone https://x-access-token:${{ secrets.HELM_REPO_PAT }}@github.com/kapyuval/msd-test-helm.git
        cd helm-charts-repo
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Update appVersion and image.tag
      run: |
        cd msd-test-helm/charts/msd-test-app

        # Update appVersion in Chart.yaml
        sed -i "s/^appVersion:.*/appVersion: \"${{ steps.get_version.outputs.app_version }}\"/" Chart.yaml

        # Go to where values file is stored
        cd ../../env/dev/msd-test-app
  
        # Update image.tag in values.yaml
        sed -i "s/^\([[:space:]]*tag:\).*/\1 \"${{ steps.get_version.outputs.app_version }}\"/" values.yaml

    - name: Commit and Push Changes
      run: |
        cd msd-test-helm
        git add charts/msd-test-app/Chart.yaml env/dev/msd-test-app/values.yaml
        git commit -m "Bbump chart version to ${{ steps.get_version.outputs.app_version }}"
        git push
